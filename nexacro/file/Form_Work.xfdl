<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Work" width="1280" height="720" titletext="Form_Work" onload="Form_Work_onload">
    <Layouts>
      <Layout width="1280" height="720" screenid="Desktop_screen">
        <Button id="btnFileSelect" taborder="0" text="파일선택" left="41" top="39" width="79" height="31" onclick="btnFileSelect_onclick"/>
        <Button id="btnSave" taborder="1" text="업로드" left="348" top="39" width="80" height="30" onclick="btnSave_onclick"/>
        <Grid id="Grid" taborder="2" left="41" top="85" width="389" height="173" binddataset="dsFile" ondragenter="Grid_ondragenter" ondragleave="Grid_ondragleave" ondrop="Grid_ondrop" oncellclick="Grid_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="242"/>
                <Column size="106"/>
                <Column size="25"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="파일명"/>
                <Cell col="1" text="크기"/>
                <Cell col="2" expandshow="hide" expr="X"/>
              </Band>
              <Band id="body">
                <Cell text="bind:name"/>
                <Cell col="1" text="bind:size"/>
                <Cell col="2" text="bind:cancle" displaytype="buttoncontrol"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnDelete" taborder="3" text="삭제" left="262" top="285" width="79" height="31" onclick="btnDelete_onclick"/>
        <Button id="btnSelectList" taborder="4" text="리스트 가져오기" left="41" top="285" width="109" height="31" onclick="btnSelectList_onclick"/>
        <Button id="btnDown" taborder="5" text="다운로드" left="351" top="285" width="79" height="31" onclick="btnDown_onclick"/>
        <Grid id="Grid1" taborder="6" left="41" top="326" width="392" height="278" binddataset="dsList" onheadclick="Grid1_onheadclick" treeinitstatus="expand,all" treeusecheckbox="false" oncellclick="Grid1_oncellclick" oncellposchanged="Grid1_oncellposchanged">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="34"/>
                <Column size="212"/>
                <Column size="80"/>
                <Column size="52"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkboxcontrol" edittype="checkbox"/>
                <Cell col="1" text="파일명"/>
                <Cell col="2" text="크기"/>
                <Cell col="3"/>
              </Band>
              <Band id="body">
                <Cell text="bind:CHK" displaytype="checkboxcontrol" edittype="checkbox"/>
                <Cell col="1" text="bind:FILE_NAME"/>
                <Cell col="2" text="bind:FiLE_SIZE"/>
                <Cell col="3" displaytype="buttoncontrol" text="bind:DOWN" textAlign="center"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <ProgressBar id="ProgressBar" taborder="7" max="100" min="0" left="163" top="40" width="178" height="30" smooth="true"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.saveUrl = "https://cj-erp.chunjae.co.kr:8000/erp-next/jsp/";
this.gv_isCheckAll = 0;

//파일선택 
this.btnFileSelect_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fileDialog.open('nexacro17', FileDialog.MULTILOAD);
};

//파일선택 후 add file list
this.fileDialog_onclose = function(obj:nexacro.FileDialog,e:nexacro.FileDialogEventInfo)
{
	this.fileUpTrans.clearFileList();
	this.addFileList(e.virtualfiles);
};

this.addFileList = function(filelist)
{
	for (var i = 0, len = filelist.length, vFile; i < len; i++)
    {
        vFile = filelist[i];
        vFile.addEventHandler("onsuccess", this.FileList_onsuccess, this);
        vFile.addEventHandler("onerror", this.FileList_onerror , this);
        
        vFile.open(null, 1);
    }
}

// add file list success
this.FileList_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo)
{
    switch (e.reason)
    {
        case 1:
            obj.getFileSize();
            break;
        case 9:
            var nRowIdx = this.dsFile.addRow();
            this.dsFile.setColumn(nRowIdx, 0, obj.filename);
            this.dsFile.setColumn(nRowIdx, 1, this.cutFileSize(e.filesize));
			this.dsFile.setColumn(nRowIdx, 2, "X");
            this.fileUpTrans.addFile(obj.filename, obj);
            break;
    }
}

//add file list fail
this.FileList_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo)
{
    trace("errortype: "+e.errortype);
    trace("errormsg: "+e.errormsg);
    trace("statuscode: "+e.statuscode);
}

//파일 사이즈
this.cutFileSize = function(filesize)
{
    var sOutput = filesize + " bytes";
    for (var aMultiples = ["KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"], nMultiple = 0, nApprox = filesize / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) 
    {
        sOutput = nApprox.toFixed(3) + " " + aMultiples[nMultiple];
    }
    return sOutput;
};

//파일 저장
this.btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
    this.fileUpTrans.upload(this.saveUrl + 'fileUpload.jsp?fileFolder=img');
};

//파일 저장 성공 
this.fileUpTrans_onsuccess = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferEventInfo)
{
	alert('파일 저장 성공!');
	this.dsFile.clearData();
	this.ProgressBar.set_pos(0);
};

//파일 저장 실패
this.fileUpTrans_onerror = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferErrorEventInfo)
{
	trace(e.loaded+"/"+e.total);
};

///파일 업로드 ProgressBar
this.fileUpTrans_onprogress = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferProgressEventInfo)
{	
	//get percentage
	var rtnPercent = this.fnGetPercent(e.loaded,e.total);	
	this.ProgressBar.set_pos(rtnPercent);
};

this.fnGetPercent = function(nload,nTotal)
{
	var nCurPercent = (nload / nTotal) * 100;
	return nCurPercent;
};

//업로드 리스트에서 삭제
this.Grid_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(e.cell == 2)
	{
		var nRow    = this.dsFile.rowposition;
		var sFileid = this.dsFile.getColumn(nRow,"name");
		this.dsFile.deleteRow(nRow);
		
		//filelist remove
		this.fileUpTrans.removeFile(sFileid);	
	}
};

//그리드 Drag&Drop
this.Grid_ondragenter = function(obj:nexacro.Grid,e:nexacro.DragEventInfo)
{
	 if(e.datatype == "file")
    {
        this.Grid.set_opacity(0.5);
    }
};

this.Grid_ondragleave = function(obj:nexacro.Grid,e:nexacro.DragEventInfo)
{
	this.Grid.set_opacity(1);
};

this.Grid_ondrop = function(obj:nexacro.Grid,e:nexacro.GridDragEventInfo)
{
	this.Grid.set_opacity(1);
    if(e.datatype == "file")
    {
        this.addFileList(e.filelist);
    }
};

//리스트 불러오기
this.btnSelectList_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//search attach file list
	this.transaction("list", this.saveUrl + "fileDownload_list.jsp", "", "dsList=dsList", "filefolder=img", "callback_transaction", "false", "0");
};

this.callback_transaction = function(svcId, errCode, errMsg)
{
	if(svcId == "list")
	{
		this.dsList.set_enableevent(false);
		for(var i=0; i<this.dsList.getRowCount(); i++)
		{
			this.dsList.setColumn(i,"FiLE_SIZE",this.cutFileSize(this.dsList.getColumn(i,"FiLE_SIZE")));
			this.dsList.setColumn(i, "DOWN", "저장");
		}
		this.dsList.set_enableevent(true);
		this.Grid1.setCellProperty("Head", 0, "text", 0);
	}else if (svcId == "delete")
	{
		this.btnSelectList.click(); //리스트 다시 가져오기
	}
	this.Grid1.setCellProperty("Head", 0, "text", 0);
};

//체크박스 선택
this.Grid1_onheadclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(e.cell == 0)
    {
        this.gf_setCheckAll(obj, e);
    }
};

this.gf_setCheckAll = function(obj:Grid, e:GridClickEventInfo)
{
    var strColID = obj.getCellProperty("body", e.cell, "text").replace(/bind:/i, "");
        
    //체크박스가 체크되어 있으면 체크 해제 
    //체크되어 있지 않으면 체크
    this.gv_isCheckAll = (this.gv_isCheckAll ? 0 : 1);
    
    //Dataset의 이벤트를 끔
    //this.Dataset00.enableevent = false;
    
    //check to body column
    for(var i=0; i< this.dsList.getRowCount(); i++)
    {
        this.dsList.setColumn(i, strColID, this.gv_isCheckAll);
    }
    
    //check to head column
    obj.setCellProperty("Head", 0, "text", this.gv_isCheckAll);

    //Dataset의 이벤트를 켬
    //this.Dataset00.enableevent = true;
	
};

//파일 삭제
this.btnDelete_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var deleteFile = new Array();
	var deleteFileName;
	
	if(	this.dsList.getCaseCount('CHK == 1') == 0 )
	{
		alert('선택된 파일이 없습니다');
	}else
	{
		for(var i=0; i<this.dsList.getRowCount(); i++)
		{
			if(this.dsList.getColumn(i, 'CHK') == 1)
			{
				deleteFileName = deleteFileName + "," + this.dsList.getColumn(i,"FILE_NAME"); 
				deleteFile = nexacro.wrapQuote(deleteFileName);
			}
		}
		this.transaction("delete", this.saveUrl + "fileDelete.jsp", "", "", "fileFolder=img deleteFile=" + deleteFile, "callback_transaction", "false", "0");
	}
};

//파일 다운로드(단일)
this.Grid1_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	if(e.cell == 3)
	{
		this.fileDownTrans.clearPostDataList();
		
		//this.fileDownTrans.set_downloadfilename(this.dsList.getColumn(e.row, "FILE_NAME"));	//runtime 전용 프로퍼티
		
		this.fileDownTrans.setPostData(
			"filepath",
			this.dsList.getColumn(e.row, "FILE_URL")
		);
		this.fileDownTrans.setPostData(
			"filename",
			this.dsList.getColumn(e.row, "FILE_NAME")
		);
		this.fileDownTrans.setPostData(
			"filefolder",
			"img"
		);
		this.fileDownTrans.download(this.saveUrl+"fileDownload.jsp");
	}
};

//파일 다운로드(.Zip)
this.btnDown_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fileDownTrans.clearPostDataList();	
	var arrNameList = new Array();
	
	if(	this.dsList.getCaseCount('CHK == 1') == 0 )
	{
		alert('선택된 파일이 없습니다');
	}else
	{
		for(var i=0; i<this.dsList.getRowCount(); i++)
		{
			if(this.dsList.getColumn(i, 'CHK') == 1)
			{
				arrNameList[i] = this.dsList.getColumn(i, "FILE_NAME");
			}
		}
			
		//this.fileDownTrans.set_downloadfilename("fileSample.zip");	//runtime 전용 프로퍼티
			
		this.fileDownTrans.setPostData(
			"filefolder",
			"img"
		);
		this.fileDownTrans.setPostData(
			"filenamelist",
			arrNameList
		);
		
		this.fileDownTrans.download(this.saveUrl+"fileDownload_zip.jsp");
	}
};

//파일 다운로드 실패
this.fileDownTrans_onerror = function(obj:nexacro.FileDownTransfer,e:nexacro.FileDownTransferErrorEventInfo)
{
	trace(e.errormsg);
	alert('파일 다운로드에 실패했습니다');
};

//파일 다운로드 성공
this.fileDownTrans_onsuccess = function(obj:nexacro.FileDownTransfer,e:nexacro.FileDownTransferEventInfo)
{
	alert('파일 다운로드 성공');
};


]]></Script>
    <Objects>
      <Dataset id="dsFile">
        <ColumnInfo>
          <Column id="name" type="STRING" size="256"/>
          <Column id="size" type="STRING" size="256"/>
          <Column id="cancle" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <FileUpTransfer id="fileUpTrans" onerror="fileUpTrans_onerror" onprogress="fileUpTrans_onprogress" onsuccess="fileUpTrans_onsuccess"/>
      <FileDialog id="fileDialog" onclose="fileDialog_onclose"/>
      <Dataset id="dsList" useclientlayout="true">
        <ColumnInfo>
          <Column id="CHK" type="STRING" size="256"/>
          <Column id="FILE_NAME" type="STRING" size="256"/>
          <Column id="FILE_URL" type="STRING" size="256"/>
          <Column id="DEPTH" type="STRING" size="256"/>
          <Column id="STATUS" type="STRING" size="256"/>
          <Column id="FiLE_SIZE" type="STRING" size="256"/>
          <Column id="DOWN" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <FileDownTransfer id="fileDownTrans" onerror="fileDownTrans_onerror" onsuccess="fileDownTrans_onsuccess"/>
    </Objects>
  </Form>
</FDL>
